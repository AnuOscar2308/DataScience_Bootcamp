# -*- coding: utf-8 -*-
"""Bootcamp_Assignment2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j5XbBvgMTzQSNQUqLfMriNvAIVZZo2An
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

#Create a line plot of ZN and INDUS in the housing data.

	#a. For ZN, use a solid green line. For INDUS, use a blue dashed line.
	#b. Change the figure size to a width of 12 and height of 8.
	#c. Change the style sheet to something you find https://tonysyu.github.io/raw_content/matplotlib-style-gallery/gallery.html.

housing_csv = 'boston_housing_data.csv'
housing = pd.read_csv(housing_csv)

housing.head(10)

housing[['ZN', 'INDUS']].plot(figsize=(15,7), style={'ZN': 'g', 'INDUS': ':b'});

housing[['ZN', 'INDUS']].plot(figsize=(12,8), style={'ZN': 'g', 'INDUS': ':b'});

housing[['ZN', 'INDUS']].plot(figsize=(15,7), style={'ZN': 'vg', 'INDUS': 'r'});

#2. Create a bar chart using col1 and col2 of dummy data.

#	a. Give the plot a large title of your choosing.
#	b. Move the legend to the lower-left corner.
#	c. Do the same thing but with horizontal bars.
#	d. Move the legend to the upper-right corner.

df = pd.DataFrame(np.random.randn(10, 4),
                  columns=['col1', 'col2', 'col3', 'col4'],
                  index=['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'])

df.head(10)

ax = df.plot(kind='bar', figsize=(15,3));

ax.set_title('Dummy Data', fontsize=21,y=1);

ax.legend(loc=3);

ax.set_ylabel('y-axis info', fontsize=16);

ax.set_xlabel('x-axis info', fontsize=16);

ax = df.plot(kind='barh', figsize=(3,15));

ax.set_title('Dummy Data', fontsize=21,y=1);

ax.legend(loc=1);

ax.set_ylabel('y-axis info', fontsize=16);

ax.set_xlabel('x-axis info', fontsize=16);

#3. Create a histogram with pandas for using MEDV in the housing data.

#	a. Set the bins to 20

housing.MEDV.plot(kind='hist', bins=29);

#4. Create a scatter plot of two heatmap entries that appear to have a very positive correlation.

housing_correlations = housing.corr();
sns.heatmap(housing_correlations);

housing_correlations = housing.corr()

plt.figure(figsize=(10, 8))
sns.heatmap(housing_correlations, annot=True, cmap='coolwarm')
plt.show()

var1 = 'RM'
var2 = 'MEDV'

plt.figure(figsize=(8, 6))
sns.scatterplot(data=housing, x=var1, y=var2)

plt.title('Scatter Plot of {} and {}'.format(var1, var2))
plt.xlabel(var1)
plt.ylabel(var2)

plt.show()

#5. Now, create a scatter plot of two heatmap entries that appear to have negative correlation.

housing_correlations = housing.corr()

plt.figure(figsize=(10, 8))
sns.heatmap(housing_correlations, annot=True, cmap='coolwarm')
plt.show()

var1 = 'LSTAT'
var2 = 'MEDV'

plt.figure(figsize=(8, 6))
sns.scatterplot(data=housing, x=var1, y=var2)

plt.title('Scatter Plot of {} and {}'.format(var1, var2))
plt.xlabel(var1)
plt.ylabel(var2)

plt.show()